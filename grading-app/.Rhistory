shiny::runApp()
install.packages("tidyverse")
runApp()
a <- (2, 3, 5, NA)
a <- c(2, 3, 5, NA)
min(a)
min(a, na.rm = T)
a
a <- c(a, NA)
a
min(a, na.rm = T)
sort(a)
sort(a)[1:2]
avg_drop_two_lowest <- function(values) {
return(sum(values) - sum(sort(values)[1:2]) / sum(!is.na(values)))
}
avg_drop_two_lowest(a)
sum(a)
a
sum(a)avg_drop_two_lowest <- function(values) {
return(sum(values, na.rm = T) - sum(sort(values)[1:2]) / sum(!is.na(values)))
}
avg_drop_two_lowest <- function(values) {
return(sum(values, na.rm = T) - sum(sort(values)[1:2]) / sum(!is.na(values)))
}
avg_drop_two_lowest(a)
a
avg_drop_two_lowest <- function(values) {
return(round((sum(values, na.rm = T) - sum(sort(values)[1:2])) / sum(!is.na(values)), 2))
}
avg_drop_two_lowest(a)
a
sum(a, na.rm=T)
sum(sort(a)[1:2])
avg_drop_two_lowest <- function(values) {
return(round((sum(values, na.rm = T) - sum(sort(values)[1:2])) / (sum(!is.na(values)) - 2), 2))
}
avg_drop_two_lowest(a)
length(a, na.rm=T)
length(a)
length(a) - is.na(a)
length(a) - sum(is.na(a))
avg_drop_two_lowest <- function(values) {
if (length(a) - sum(is.na(a)) <= 2) {
return(round(mean(a, na.rm = T), 2))
}
return(round((sum(values, na.rm = T) - sum(sort(values)[1:2])) / (sum(!is.na(values)) - 2), 2))
}
avg_drop_two_lowest(c(2, NA, NA))
avg_drop_two_lowest <- function(values) {
if (length(values) - sum(is.na(values)) <= 2) {
return(round(mean(values, na.rm = T), 2))
}
return(round((sum(values, na.rm = T) - sum(sort(values)[1:2])) / (sum(!is.na(values)) - 2), 2))
}
avg_drop_two_lowest(c(2, NA, NA))
avg_drop_two_lowest(c(2, 3, NA))
avg_drop_two_lowest(c(2, 3, 3, NA))
a <- c("Com", "Not Com", "Com", "Com", NA, NA, "Not Com")
a
a == "Com"
b <- a == "Com"
b
avg_drop_two_lowest(b)
a <- c(a, "Com")
b <- a == "Com"
avg_drop_two_lowest(b)
a
a <- c(a, "Not Com")
b <- a == "Com"
avg_drop_two_lowest(b)
TRUE * 100
avg_drop_x_lowest <- function(values, x=0) {
if (length(values) - sum(is.na(values)) <= x) {
return(100)
} else if (x == 0) {
return(round(sum(values, na.rm = T) / (sum(!is.na(values)) - 2), 2))
} else {
return(round((sum(values, na.rm = T) - sum(sort(values)[1:2])) / (sum(!is.na(values)) - 2), 2))
}
}
b
avg_drop_x_lowest(b)
avg_drop_x_lowest(b, x=0)
avg_drop_x_lowest(b, x=2)
avg_drop_x_lowest(b, x=4)
b
sum(b)
sum(b, na.rm=T)
is.na(b)
b
4/7
avg_drop_x_lowest <- function(values, x=0) {
if (length(values) - sum(is.na(values)) <= x) {
return(100)
} else if (x == 0) {
return(round(sum(values, na.rm = T) / (sum(!is.na(values)) - 2), 2))
} else {
return(round((sum(values, na.rm = T) - sum(sort(values)[1:2])) / (sum(!is.na(values)) - 2), 2))
}
}
avg_drop_x_lowest(b)
return(round(sum(b, na.rm = T) / (sum(!is.na(b)) - 2), 2))
round(sum(b, na.rm = T) / (sum(!is.na(b)) - 2), 2)
sum(b, na.rm=T)
avg_drop_x_lowest <- function(values, x=0) {
if (length(values) - sum(is.na(values)) <= x) {
return(100)
} else if (x == 0) {
return(round(sum(values, na.rm = T) / (sum(!is.na(values)) - x), 2))
} else {
return(round((sum(values, na.rm = T) - sum(sort(values)[1:x])) / (sum(!is.na(values)) - x), 2))
}
}
avg_drop_x_lowest(b)
avg_drop_x_lowest(b, x = 2)
avg_drop_x_lowest(b, x = 3)
b
avg_drop_x_lowest(b, x = 1)
avg_drop_x_lowest(b, x = 7)
runApp()
runApp()
a <- c(1, 2, 3, 4, 4, 5)
replace(a, 4, 0)
replace(a, a==4, 2)
replace(a, a==4, c(2, 1))
runApp()
a <- c("Completed", "Not Completed", "Unknown", "Complete", "Complete")
lab_grades_raw <- a
lab_grades <- replace(lab_grades_raw, lab_grades_raw == "Completed", 100)
lab_grades <- replace(lab_grades, lab_grades == "Not Completed", 0)
lab_grades <- replace(lab_grades, lab_grades == "Unknown", NA)
lab_grades
a <- c("Completed", "Not Completed", "Unknown", "Completed", "Completed")
lab_grades_raw <- a
lab_grades <- replace(lab_grades_raw, lab_grades_raw == "Completed", 100)
lab_grades <- replace(lab_grades, lab_grades == "Not Completed", 0)
lab_grades <- replace(lab_grades, lab_grades == "Unknown", NA)
a <- c("Completed", "Not Completed", "Unknown", "Completed", "Completed")
lab_grades
runApp()
library(rsconnect)
rsconnect::deployApp(app.R)
rsconnect::deployApp('app.R')
rsconnect::deployApp()
rsconnect::deployApp()
rsconnect::setAccountInfo(name='nnpok',
token='F0F3C9A0007FF6729B089D0E7083A1F6',
secret='<SECRET>')
rsconnect::setAccountInfo(name='nnpok',
token='F0F3C9A0007FF6729B089D0E7083A1F6',
secret='<SECRET>')
rsconnect::setAccountInfo(name='nnpok',
token='F0F3C9A0007FF6729B089D0E7083A1F6',
secret='<SECRET>')
Sys.setlocale(locale="en_US.UTF-8")
rsconnect::setAccountInfo(name='nnpok',
token='F0F3C9A0007FF6729B089D0E7083A1F6',
secret='<SECRET>')
rsconnect::setAccountInfo(name='nnpok',
token='F0F3C9A0007FF6729B089D0E7083A1F6',
secret='Idrgt0vUPXDJB9W0HnTmyOpQ7VK2Y04/4/T4stXy')
library(rsconnect)
rsconnect::deployApp()
